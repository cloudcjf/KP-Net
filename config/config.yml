common:
  # model: "" #pytorch model
  # model: "./cjf_model/08/2_best.pth" #pytorch model
  model: "./model/release_model/3_20/04/8.pth" # for rskdd cjf
  continue_train: False
  batch_size: 128  #batch size
  p_thresh: 3 #distance threshold of positive sample
  graph_pairs_dir: "./SG_PR_DATA/graphs_sk" #dir contain training or testing data
  # graph_pairs_dir: "./data" # for rskdd cjf

  pair_list_dir: './SG_PR_DATA/eval/3_20' #dir of pair list for traning or testing data
arch:
  keep_node: 1 #for test
  filters_1: 64
  filters_2: 64
  filters_3: 32
  tensor_neurons: 16 # for ??
  bottle_neck_neurons: 16 # for ??
  K: 10 #KNN parameter
train:
  epochs: 9
  train_sequences: ['00','01','02','03','04','05','06','07','09','10']  #list of training sequences
  # train_sequences: ['04']  #list of training sequences
  eval_sequences: ["08"] #list of Validation sequence
  dropout: 0
  learning_rate: 0.001
  weight_decay: 0.0005
  gpu: 0 #gpu id
  logdir: "./logs_sg" #dir to save training results
  # logdir: "./logs_rskdd" #dir to save training results
  node_num: 100 #if node num of a graph is less than node_num, we use zero node to pad it to node_num
eva_batch:
  sequences: ["04",]  #list of sequences to evaluation
  output_path: "./sg_test_output"  #dir to save evaluation results
  # output_path: "./cjf_test_output"  #dir to save evaluation results
  show: True  #Whether to display the image
eva_pair:
  pair_file: ["./data/3.json","./data/0.json"]
